version: '3'
services:

  hub:
    container_name: hub
    image: jetbrains/hub:${JB_HUB_VERSION}
    networks:
      - ${JB_NETWORK}
    ports:
      - ${JB_HUB_PORT}:8080
    volumes:
      - ./hub/backups:/opt/hub/backups:rw
      - ./hub/data:/opt/hub/data:rw
      - ./hub/logs:/opt/hub/logs:rw
      - ./hub/conf:/opt/hub/conf:rw
      - ./hub/temp:/opt/hub/temp:rw
    restart: always

  youtrack:
    container_name: youtrack
    image: jetbrains/youtrack:${JB_YOUTRACK_VERSION}
    networks:
      - ${JB_NETWORK}
    ports:
      - ${JB_YOUTRACK_PORT}:8080
    volumes:
      - ./youtrack/backups:/opt/youtrack/backups:rw
      - ./youtrack/data:/opt/youtrack/data:rw
      - ./youtrack/logs:/opt/youtrack/logs:rw
      - ./youtrack/conf:/opt/youtrack/conf:rw
      - ./youtrack/temp:/opt/youtrack/temp:rw
    restart: always
    links:
      - teamcity
      - hub

  upsource:
    container_name: upsource
    image: jetbrains/upsource:${JB_UPSOURCE_VERSION}
    networks:
      - ${JB_NETWORK}
    ports:
      - ${JB_UPSOURCE_PORT}:8080
    volumes:
      - ./upsource/backups:/opt/upsource/backups:rw
      - ./upsource/data:/opt/upsource/data:rw
      - ./upsource/logs:/opt/upsource/logs:rw
      - ./upsource/conf:/opt/upsource/conf:rw
      - ./upsource/temp:/opt/upsource/temp:rw
    restart: always
    links:
      - youtrack
      - teamcity
      - hub

  teamcity:
    container_name: teamcity
    image: jetbrains/teamcity-server
    networks:
      - ${JB_NETWORK}
    ports:
      - ${JB_TEAMCITY_PORT}:8111
    volumes:
      - ./teamcity/data:/data/teamcity_server/datadir:rw
      - ./teamcity/conf:/opt/teamcity/conf:rw
      - ./teamcity/logs:/opt/teamcity/logs:rw
    restart: always
    links:
      - postgres
      - hub

  teamcity-agent:
    image: jetbrains/teamcity-agent:${JB_AGENT_VERSION}
    networks:
      - ${JB_NETWORK}
    environment:
      - "SERVER_URL=teamcity:8111"
    volumes: 
      - ./teamcity-agent/conf:/data/teamcity_agent/conf:rw
    restart: always
    links:
      - teamcity

  postgres:
    container_name: postgres
    image: postgres:${JB_POSTGRES_VERSION}
    build:
      context: .
      dockerfile: Dockerfile-postgres
    networks:
      - ${JB_NETWORK}
    ports:
      - ${JB_POSTGRES_PORT}:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD: ${JB_POSTGRES_ROOT_PASSWORD}
    restart: always
 
